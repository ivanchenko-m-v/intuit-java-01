Первое задание состоит из 4-х шагов. Основная цель задания — знакомство с средой разработки и написание простейшей фронтендной части сервера.

Шаг 1: Написать "Hello World!" — приложение можно запустить и оно выводит в лог - "Hello World!".

Шаг 2: Написать "Hello Server!" — приложение запускает jetty server (на localhost:8080). В браузере можно открыть страничку localhost:8080 и увидеть строку "Hello Server!".

Шаг 3: Изменить страницу, которую возвращает сервер так, чтобы она перегружала себя раз в секунду. Вынести создание страницы в отдельный класс (PageGenerator).

Шаг 4: Страница, которую возвращает сервер, должна содержать форму (<form>) и отправлять (POST) себя на сервер вместе с id сессии пользователя. Сервер должен проверять запрос на наличие в нем переменой с id сессии. Новым пользователям возвращать новый id из AtomicInteger, знакомых пользователей приветствовать, отправляя сообщение "Hello user! Your sessionId: " + id;

В результате работы должно получиться приложение, которое ждет запросы от браузера. Пользователям, которые обращаются к серверу из нового окна браузера, выдавать id. Страница, которую сервер возвращает пользователю должна перегружать себя раз в секунду. При перезагрузке страницы id пользователя должно сохраняться.

Усложнение задания:

Шаг 5: Подключить загрузку статической страницы index.html. Jetty умеет отдавать "статику", для того чтобы выполнить задание не нужно использовать сторонние Http сервера.

Шаг 6: Хранить sessionId в куках. Для этого можно использовать объект HttpSession библиотеки Jetty.

Шаг 7: Использовать сервлеты для обработки запросов по разным адресам.